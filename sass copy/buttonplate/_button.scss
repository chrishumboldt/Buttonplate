/**
 * SASS File: 		_button.scss
 * Type: 			partial
 * Author:        	Chris Humboldt
 * Last Edited:   	22 March 2014
 */


// Table of contents
// ---------------------------------------------------------------------------------------
// Variables
// Button mixin
// Button drop-down
// Set line


// Variables
// ---------------------------------------------------------------------------------------
$drp-away-from-button			: 4px;
$images-root					: "../img" !default;


// Button mixin
// ---------------------------------------------------------------------------------------
@mixin button($colour: grey, $size: normal, $type: flat, $shape: rounded) {
	position: relative;
	display: inline-block;
	vertical-align: middle;
	text-align: center;
	border: none;
	text-decoration: none;
	@include animate(background-color);
	
	// Hover state
	&:hover {
		cursor: pointer;
	}
		
	// Active state
	&:active:not(.button-drop-down-open) {
		@include drop-shadow-inset($color: fade-out(#000, 0.6), $size: 5px, $vertical-offset: 2px, $horizontal-offset: 0px);
		text-shadow: fade-out($white, 0.75) 0px 1px 0;
	}
	
	// Drop down list
	ul {
		list-style: none;
		z-index: 1;
		background-color: $white;
		@include button-drop-down();
	}
	&.button-drop-down {
		.arrow {
			display: inline-block;
			height: 8px;
			width: 12px;
			background-image: url('#{$images-root}/buttonplate/arrow-light.png');
			background-repeat: no-repeat;
			background-position: right;
			background-size: 12px 8px;
		
			@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
			    only screen and (-o-min-device-pixel-ratio: 3/2),
			    only screen and (min--moz-device-pixel-ratio: 1.5),
			    only screen and (min-device-pixel-ratio: 1.5) {
				background-image: url('#{$images-root}/buttonplate/arrow-light-2x.png');
			}
		}
	}
	
	// Colours
	@if $type == flat {
		
		@if $colour == grey {
			@include btn-colour-grey();
		}
		@if $colour == black {
			@include btn-colour-black();
		}
		@else if $colour == blue {
			@include btn-colour-blue();
		}
		@else if $colour == blue-dark {
			@include btn-colour-blue-dark();
		}
		@else if $colour == green {
			@include btn-colour-green();
		}
		@else if $colour == yellow {
			@include btn-colour-yellow();
		}
		@else if $colour == orange {
			@include btn-colour-orange();
		}
		@else if $colour == red {
			@include btn-colour-red();
		}
		@else if $colour == aqua {
			@include btn-colour-aqua();
		}
		@else if $colour == purple {
			@include btn-colour-purple();
		}
	}
	@else if $type == gradient {
		
		@if $colour == grey {
			@include btn-gradient-grey();
		}
		@if $colour == black {
			@include btn-gradient-black();
		}
		@else if $colour == blue {
			@include btn-gradient-blue();
		}
		@else if $colour == blue-dark {
			@include btn-gradient-blue-dark();
		}
		@else if $colour == green {
			@include btn-gradient-green();
		}
		@else if $colour == yellow {
			@include btn-gradient-yellow();
		}
		@else if $colour == orange {
			@include btn-gradient-orange();
		}
		@else if $colour == red {
			@include btn-gradient-red();
		}
		@else if $colour == aqua {
			@include btn-gradient-aqua();
		}
		@else if $colour == purple {
			@include btn-gradient-purple();
		}
	}
	
	// Size
	@if $size == small {
		@include btn-size-s();
	}
	@else if $size == normal {
		@include btn-size-n();
	}
	@else if $size == large {
		@include btn-size-l();
	}
	@else if $size == extra-large {
		@include btn-size-xl();
	}
	
	// Shape
	@if $shape == rounded {
		@include btn-shape-rounded();
	}
	@else if $shape == pill {
		@include btn-shape-pill();
	}
	@else if $shape == squared {
		@include btn-shape-pill();
	}
}


// Button drop-down
// ---------------------------------------------------------------------------------------
@mixin button-drop-down() {
	
	// CSS
	display: none;
	position: absolute;
	padding: 0px;
	margin: $drp-away-from-button 0px;
	@include border-radius();
	@include drop-shadow();
		
	li {
		padding: 0px;
		margin: 0px;
		&:first-child a {
			@include border-radius-top();
		}
		&:last-child a {
			@include border-radius-bottom();
		}
		&.line-top {
			@include set-line(top);
		}
		&.line-bottom {
			@include set-line(bottom);
		}
		
		// Links
		a {
			display: block;
			text-align: left;
			color: $base-black;
			text-decoration: none;
			vertical-align: middle;
			
			&:hover {
				color: $white;
			}
		}
	}
}


// Set line
// ---------------------------------------------------------------------------------------
@mixin set-line($position: top) {
	
	// Determine where the line goes
	@if $position == top {
		
		border-top: 1px solid $grey-light;
	}
	@else if $position == bottom {
		
		border-bottom: 1px solid $grey-light;
	}
}